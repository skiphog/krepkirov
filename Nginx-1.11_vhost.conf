    #-----------------------------------------------#
    # Начало блока конфигурации хоста
    #-----------------------------------------------#

    server {
        listen                    %ip%:%httpport%;
        listen                    %ip%:%httpsport% ssl http2;
        server_name               %host% %aliases%;
        root                      "%hostdir%/public";
        index                     index.php;
        autoindex                 off;  # Выводить листинг каталога если не найден индексный файл
        limit_conn                perip 64; # Ограничение кол-ва соединений с одного IP
		rewrite ^/(.*)/$ /$1 permanent; # Убрать все слеши на конце
		

        # Создание сертификатов на примере файлов от COMODO
        # copy /b domain.crt+COMODORSADomainValidationSecureServerCA.crt+COMODORSAAddTrustCA.crt server.crt
        # copy /b COMODORSADomainValidationSecureServerCA.crt+COMODORSAAddTrustCA.crt trusted.crt
        # openssl.exe dhparam -out dhparam.pem 2048

        ssl_certificate           "%sprogdir%/userdata/config/cert_files/server.crt";
        ssl_certificate_key       "%sprogdir%/userdata/config/cert_files/server.key";
        ssl_dhparam               "%sprogdir%/userdata/config/cert_files/dhparam.pem";
        # ssl_trusted_certificate "%sprogdir%/userdata/config/cert_files/trusted.crt";

        # Отсекаем известных ботов (список можно дополнить через разделитель "|")
        if ($http_user_agent ~* (MJ12bot|Solomono|Ahrefs|SISTRIX|LinkpadBot|nmap|nikto|wikto|sqlmap|bsqlbf|w3af|acunetix|havij|appscan)) {
            return 444;
        }

        # Запрещаем чтение скрытых файлов (начинающихся с точки)
        # Доступ к каталогам /.well/ и /.known/ будет разрешён (список можно дополнить через разделитель "|")
        location ~* /\.(?!(well|known)\/) {
            deny all;
        }

        # Запрещаем браузерам самим определять тип документа (определяет сервер)
        more_set_headers "X-Content-Type-Options: nosniff";

        # Включаем Content-Security-Policy (разрешения: +Google Аnalytics +Google Fonts +Яндекс Метрика)
        # more_set_headers "Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://ssl.google-analytics.com https://mc.yandex.ru https://yastatic.net; img-src 'self' https://ssl.google-analytics.com https://mc.yandex.ru; connect-src https://mc.yandex.ru; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://themes.googleusercontent.com; frame-src 'self'; object-src 'none'";

        # Ограничиваем методы обращения к серверу (список можно дополнить через разделитель "|")
        # if ($request_method !~* ^(GET|HEAD|POST)$){return 405;}

        # NEW! Ограничиваем скорость независимо от числа соединений
        # limit_traffic_rate rate_ip 1024k; # Ограничиваем скорость по IP адресу
        # limit_traffic_rate rate_uri 1024k; # Ограничиваем скорость по URL адресу

        # Принудительное использование HTTPS на сайте
        # more_set_headers "Strict-Transport-Security: max-age=15768000";
        # more_set_headers "Strict-Transport-Security: max-age=15768000; includeSubdomains;"; # (включая поддомены)
        # set $do_redirect  1;
        # if ($scheme ~* ^https$) {
        #     set $do_redirect 0;
        # }
        # if ($request_uri ~* ^/robots\.txt$) {
        #     set $do_redirect 0;
        # }
        # if ($do_redirect = 1) {
        #     return 301 https://$host$request_uri;
        # }

        # Запрет использования www префикса (www.xxx.com => xxx.com)
        # if ($host ~* ^www\.(.+)$) {
        #     set $host_without_www $1;
        #     return 301 $scheme://$1$request_uri;
        # }

        # Перенаправление абсолютно всех запросов к PHP обработчику
        # location / {
        #     rewrite ^/(.*)$ /index.php last;
        # }

        # Перенаправление всех запросов к PHP обработчику
        # (если такой файл или папка не существуют)
        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }

        # Запрещаем доступ к конфигам/бэкапам/логам (список можно дополнить через разделитель "|")
        location ~* ^.+\.(bak|conf|log|ini|sql|tar|tgz|gz)$ {
            deny all; 
        }

        location ~* ^.+\.(css|htc|js|bmp|gif|jpe?g|tiff?|png|cur|ico|woff2?|eot|ttc|ttf|otf|svg|swf)$ {
			try_files $uri =404;
            expires 1d; # Кэшируем статическое содержимое
            # Разрешаем кросс-доменные запросы
            # more_set_headers "Access-Control-Allow-Origin: *";
        }

        location ~* ^.+\.php$ {
            limit_conn perip 32; # Ограничение кол-ва соединений с одного IP
            limit_req zone=dynamic burst=32 nodelay; # Ограничение частоты запросов к PHP
            more_set_headers "X-Frame-Options: SAMEORIGIN"; # Запрещаем фреймы на чужих сайтах
            # more_set_headers "Cache-Control: max-age=0, no-cache, no-store, must-revalidate, no-transform"; # Запрещаем кэширование ответов
            try_files                         $uri =404;
            fastcgi_pass                      backend;
            fastcgi_param  TMP                "%sprogdir%/userdata/temp";
            fastcgi_param  TMPDIR             "%sprogdir%/userdata/temp";
            fastcgi_param  TEMP               "%sprogdir%/userdata/temp";
            include                           "%sprogdir%/modules/http/%httpdriver%/conf/fastcgi_params";
        }

        #-----------------------------------------------#
        # Подключение веб-инструментов
        # Не изменяйте этот блок конфигурации
        #-----------------------------------------------#

        location /openserver/ {
            root            "%sprogdir%/modules/system/html";
            index           index.php;

            %allow%allow    all;
            allow           127.0.0.0/8;
            allow           ::1/128;
            allow           %ips%;
            deny            all;

            location /openserver/server-status {
                stub_status on;
                access_log  off;
            }

            location ~* ^.+\.(css|htc|js|bmp|gif|jpe?g|tiff?|png|cur|ico|woff2?|eot|ttc|ttf|otf|svg|swf)$ {
                expires 1d; # Кэшируем статическое содержимое
            }

            location ~* ^/openserver/.+\.php$ {
                limit_conn perip 32; # Ограничение кол-ва соединений с одного IP
                limit_req zone=dynamic burst=32 nodelay; # Ограничение частоты запросов к PHP
                more_set_headers "X-Frame-Options: SAMEORIGIN"; # Запрещаем фреймы на чужих сайтах
                # more_set_headers "Cache-Control: max-age=0, no-cache, no-store, must-revalidate, no-transform"; # Запрещаем кэширование ответов
                try_files                         $uri =404;
                fastcgi_pass                      backend;
                fastcgi_param  TMP                "%sprogdir%/userdata/temp";
                fastcgi_param  TMPDIR             "%sprogdir%/userdata/temp";
                fastcgi_param  TEMP               "%sprogdir%/userdata/temp";
                include                           "%sprogdir%/modules/http/%httpdriver%/conf/fastcgi_params";
            }
        }

        #-----------------------------------------------#
        # Конфигурация сообщений об ошибках
        #-----------------------------------------------#

        #error_page 500 /500.html;
        #error_page 501 /501.html;
        #error_page 502 504 /502.html;
        #error_page 503 /503.html;
        #error_page 404 /404.html;
        #error_page 405 /405.html;

        #location ~* ^/(500|501|502|503|404|405).html$ {
        #    root             "%sprogdir%/userdata/config/error_pages";
        #    expires          -1;
        #    more_set_headers "Content-Type: text/html; charset=utf-8";
        #    internal;
        #}
    }

    #-----------------------------------------------#
    # Конец блока конфигурации хоста
    #-----------------------------------------------#
